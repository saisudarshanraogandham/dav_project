కరికుల-2005 కంప్యూటింగ్(The ACM computing curricula -2005) నిర్వచనం
చూసినట్లైతే వారు కంప్యూటింగ్(computing)ని
సాధారణ పద్ధతిలో నిర్వచించినట్లుగా
,ఇధి లక్ష్య ఆధారిత చర్యను పరీక్షించడానికి
ఉపయోగపడుతుందని అర్ధమవుతుంది .
అంటే హార్డ్వేర్,సాఫ్ట్వేర్(hardware,software) వ్యవస్థనుండి విస్తృతమైన
ప్రయోజనాలకోసం ప్రారంభించి ,మేధో సంభాషణలను
ఉపయోగించడం ,నిర్ధిస్ట ప్రయోజనాలకు సంభంధించి
సమాచారాన్ని సేకరించడం మొదలైనవి . కంప్యూటింగ్(Computing)లో
ఏదో ఒక విధమైన అవసరం ఉందని మనం గమనిస్తే
అది కంప్యూటింగ్(computing) నమూనా క్రిందకు వస్తుంది.
వనరుల పరంగా మాత్రమే కాకుండా నిభంధనల
పరంగా వాడుకునే వ్యక్తుల స్థాయిని చూపెడుతుంది
.ఒక ఉన్నత స్థాయి పరిశోధకులు లేదా
ప్రొఫెషనల్(professional) నుండి ఒక విధ్యార్ధి,ఒక
గృహిణి,సాధారణ పౌరుల వరకు వారి ప్రయోజనాలకు
తగినట్టుగా ఇది ఉపయోగపడుతుంది.
అది ఎలా ఉపయోగించడం అనేది నేర్చుకుందాం.
క్లౌడ్ కంప్యూటింగ్(Cloud Computing)వివరణ లోకి వెళ్ళేముందు,
మరొక్కసారి మనం నేర్చుకోబోయే అంశాలను పునరీక్షించుకుందాం.క్లౌడ్
కంప్యూటింగ్ పరిచయం(Cloud Computing introduction)లో NIST model ఏమి
చెప్పింది,సాధారణ లక్షణాలు ఏమిటి,
లక్షణాలు, ప్రయోజనాలు మరియు లోపాలు, ఓపెన్
స్టాండర్డ్స్(open standards) పాత్ర గురించి
చెబుతుంది.
కనుక, మనము ముందుగా ఈ క్లౌడ్ కంప్యూటింగ్
(cloud computing) కి స్టాండర్డ్ (standard) ఉందా , లేదా చూస్కోవాలి.
ఉంటే క్లౌడ్ కంప్యూటింగ్(Cloud Computing) నిర్మాణం గురుంచి
మనం ఎక్కువ తెలుసుకోవాలి.
అనగా, క్లౌడ్ కంప్యూటింగ్ స్టాక్(Cloud Computing Stack)
ఎలా సేవా ఆధారిత నిర్మాణం(service oriented
architecture) గా పని చేస్తుంది.
క్లౌడ్ కంప్యూటింగ్(Cloud Computing) లో ఏవిదమైన సేవ
నమూనాలు అందుబాటులో ఉంటాయి అంటే ఇన్ఫ్రాస్ట్రక్చర్
అస్ ఎ సర్విస్ (infrastructure as a service), ప్లాట్ఫాం
అస్ సర్విస్ (platform as a service)లేదా సాఫ్ట్వేర్
అస్ సర్విస్(software as a service) లేదా దేన్నైనా
(anything) సర్వీస్ (service) గా అందించడం.
మనము ఈ దేన్నైనా సర్విస్ గా ఎలా అందిస్తారో
తర్వాత చూద్దాం.
ఒకే క్లౌడ్(cloud) లో వివిద రకాలైన విస్తరణ
(deployment) నమూనా (model) లు ఉన్నాయి . ఇది వాస్తవమా
కాదా మరియు వాటిని ఎలా ఉపయోగిస్తాము,
ఎప్పుడు,ఎక్కడ, ఏవిధంగా డెప్లోయ్(deploy) చెయ్యాలి
, ఎన్ని రకాల విస్తరణ (deployment) నమూనాలు (models)
వున్నాయి అనేవీ తెలుసుకుంటాము .
క్లౌడ్ యొక్క మరొక ప్రధాన అంశం సేవ
నిర్వహణ (service management).
వినియోగదారులు ఏదైనా ఒక సేవను (service) కొనుగోలు
చేయాలనుకున్న లేదా మనము ఏదైనా సర్వీస్
రిజర్వ్ చేసుకున్నప్పుడు సర్వీస్ నిర్వహణ
అవసరం.
వినియోగదారుడిగా నేను సర్వీస్ ప్రొవైడర్
నుంచి నేను ఏమి హామీ ఉంటుంది వాళ్ళు అందించే
సర్వీస్ కి అని చూసుకుంటాను .
క్లౌడ్ ప్రొవైడర్ లేదా CSP, వచ్చే లాభాలకు
లేదా ఇచ్చిన హామీలను ,కంప్యూటర్స్(computers)
లో సర్వీసెస్ ఉపయోగించడానికి కావలసిన ఇతర వనరుల
గురించి సమాచారం ఇస్తుంది.
కేవలంక్లౌడ్ సర్వీసెస్(cloud services)లో నే కాకుండా
, ఏ సేవ రంగం అయినా ప్రొవైడర్(provider) మరియు
వినియోగదారుడు ఉంటారు.
అలాగే , మన రోజువారి జీవితంలో ఏ సేవకైనా
ప్రొవైడర్(provider) కి మరియు కన్స్యూమర్(consumer)
కి మధ్య సేవా పరమైన ఒప్పందం ఉంటుంది.
ఏవిధంగా అంటే, నేను 100% లేదా 100% కి దగ్గరగా
సర్వీసెస్ ప్రొవైడ్ చేస్తాను అని ప్రొవైడర్
హామీ ఇస్తారు.
కానీ నేను ఒక వినియోగదారుడిగా ఆ సర్వీస్ ని ఉపయోగిస్తున్నప్పుడు
అవసరాన్ని బట్టి దాని లభ్యత(availability)
90% కి తగ్గిపోవచ్చు.
లభ్యత(availability) ఆధారంగా వనరులను నిర్వహిస్తారు
లేదా సరఫరా చేస్తారు.
వివిధ రకాల వనరులను మరియు వాటి లభ్యత
ను బట్టి ప్రొవైడర్ ధరను నిర్ణయిస్తాడు.
దీనితో బాటుగా ఇందులోని సమస్యలు అనగా డౌన్
టైమ్(down time) కి సంభందించిన సమస్యలు, సేవా నాణ్యతకు
సంభందిన సమస్యలు,ఇంకా ఎన్నో services కి సంభందించిన
సమస్యలు,వీటన్నింటినీ మనము సేవా సంభందిత
ఒప్పందాలలో చర్చించుకుంటాం.
క్లౌడ్ కంప్యూటింగ్(Cloud computing) లో మరొక ప్రధాన
అంశం క్లౌడ్(cloud) ఆర్థిక వ్యవస్థ (Economics).
క్లౌడ్ కంప్యూటింగ్ ఎప్పుడూ ఉపయోగించడం
మంచిది అని చెప్పను కానీ, చాలా సందర్భాల్లో,
ఉదాహరణకు, మీరు ఇంటి నుంచి ఆఫీసు కి రోజూ
220kms ప్రయాణం చెయ్యాలి అనుకోండి,ఆ సందర్భం
లో ఒక కార్(car) కొనుగోలు చేస్తే ఆర్థికంగా
మంచిది.
అయితే మరి కొన్ని సందర్భాల్లో అంటే
మీరు నెలకు ఒకసారి 50కి.మీ లేదా 100కి.మీ
ఎక్కడికైనా వెళ్ళాలి అనుకుంటే అప్పుడు
కార్ (car)ను కొనుగోలు చేయడం ఆర్థికంగా
మంచిది కాదు కదా. ఇలాంటి సమయంలో కార్(car)
ను అద్దె కు తీస్కోవడం మనకు ఆర్థికంగా మంచిది.ఇదేవిధంగా
ఎప్పుడు నేను వనరులని నియమించుకోవాలి
లేదా ఎప్పుడు కొనుగోలు చెయ్యాలి అనేదానికి
ఒక పోలిక ఉంటుంది.
దీన్నంతని సమర్ధించే ఒక ఆర్థిక నమూనా
వుంటుందా లేదా అని తెలుసుకోవాలి.
ఒక సంస్థ (organization)గా నేను వనరులను (resources)
కొనడం కంటే నియమించుకుంటే (hire) ఆర్థికంగా బాగుంటుంది
అంటాను.
మనము ఒక సంస్థను మొదలు పెట్టేటపుడు
వనరులను కొనుగోలు చెయ్యడ మంచిదా లేక
నియమించుకోవడం మంచిదా మరియు ఏ ఆర్థిక నమూనా
మంచిది అని నిర్ణయించుకోవాలి.
కనుక,క్లౌడ్(cloud) ఆర్థిక వ్యవస్థ గురించి
ఇప్పుడు చూద్దాం.
క్లౌడ్ కంప్యూటింగ్(Cloud computing) లో మరొక ప్రధాన
అంశం వనరుల నిర్వహణ (Resource Management).
ఇది పూర్తిగా క్లౌడ్ ప్రొవైడర్ లేదా CSP
బాధ్యత ,అంటే వనరుల నిల్వ ఏవిధంగా సరైన
దిశలో నిర్వహించాలి.
ఒక ప్రొవైడర్ గా నను అందరికీ సేవలు
అందించేలా చెయ్యాలంకుంటున్నాను.
కనుక,నేను ఏ విధమైన వనరులను (resources) నిర్వహించాలి
వివిధ అవసరాలకు తగినట్లుగా.
ఇది దేనికైనా వర్తిస్తుంది , ఉదాహరణకు, నాకు ఒక
స్టేషనరీ షాప్ ఉందనుకుందాం.
ఈ shop లో స్టేషనరీ కి సంభందించిన వస్తువులు
అంటే చదువుకు కావల్సినవి పుస్తకాలు ,పెన్నులు
మొదలైనవి ఉంటాయి.
కనుక,నేను ఎన్ని వస్తువులు నిల్వ
చేసుకోవాలి లేదా నేను ఎంతవరకు ప్రాజెక్టు(project)
చెయ్యాలి ఇలాంటివన్నీ కూడా ఆలోచించాలి.
నేను ఎప్పుడూ నా షాప్ లో వేచివుండే
పరిస్థితి లేదా షాప్(shop)ఫుల్ గా వుంది ,కాబట్టి
నేను కొన్ని వస్తువులను షాప్ బయట పెట్టుకుంటాను
అని చెప్పే పరిస్తితి రాకూడదు.
పరిమితికి మించి వనరులని తీసుకోకూడదు.
కనుక, వనరుల నిర్వహణ సరైనదిగా ఉండాలి.
కంప్యూటింగ్ ని ఒక వనరు గా తీస్కోవడం
అనేది చాలా క్లిస్తమైనది మరియు గమ్మత్తైనది.కంప్యూటింగ్(Computing)
ని రిసోర్స్(resource)గా అందిస్తున్నప్పుడు
చాలా వనరులను పరిగణలోకి తీసుకుని నిర్వహించాల్సి
వుంటుంది.
సాదారణంగా, క్లౌడ్ కాకుండా ఏదైనా కంప్యూటింగ్(computing)
వ్యవస్థలో మనం చూసినట్లైతే ఏ అంశాలను మనము పరిగణలోనికి
తీసుకుంటాము అంటే ప్రాసెసర్(processor) కావచ్చు
లేదా సి‌.పి‌.యూ(CPU),మనము ఉపయోగించే మెమొరీ
లేదా ర్యామ్(RAM) లేదా హార్డ్ డిస్క్(hard
disk) మరియు నెట్వర్క్(network) కనెక్షన్ ఇంకా అవసరమైన
వనరులు కావచ్చు.
కనుక,ఎన్ని వనరులని మనము నిల్వ మరియు
నిర్వహించాలి.ప్రతి రిసోర్స్(resource) కి
దాని అంతర్లీన ఖరీదు ఉంటుంది.
నేను వినియోగం లేకుండా భారీ మొత్తం లో వనరులను
నిర్వహించాల్సిన అవ్సరామ్ వస్తే,
అప్పుడు నేను అధిక మొత్తం లో అంటే నిర్వహణ
ధర కంటే ఎక్కువ ధరను చెల్లించాల్సి వస్తుంది.
కనుక, ఇక్కడ సరైన లేదా సముచితమైన వనరుల
నిర్వహణ అనేది ఒక సవాలు (challenge) గా మారింది.దీని
కొరకు ఈ కోర్స్(course) లో మనం క్లౌడ్ కంప్యూటింగ్(cloud
computing) లో వివిధ రకాల వనరుల నిర్వహణ అంశాలను
తెలుసుకుంటాం.
క్లౌడ్ కంప్యూటింగ్(Cloud computing) లో మరో అంశం,
డేటా(data) నిర్వహణ (management): డేటా (డేటా(data)) అనేది
చాలా ముఖ్యమైన, గమ్మతైన విషయం ఇందులో మనం
ని ఎలా నిల్వ (store) చేస్తాం, డేటా(data) వ్యాప్తి
(scalability) మరియు క్లౌడ్(cloud)లో డేటా(data) సేవలు (services),
డేటా బేసెస్,డేటా స్టోర్లు(డేటా(data)bases,
డేటా(data) stores) అన్నీ ఉంటాయి.
కనుక, క్లౌడ్ డేటా(cloud డేటా(data)) అవసరాలను
నేర్చుకోవడం ప్రత్యేక అభ్యాసం.ఎక్కువ మొత్తంలో
ప్రక్రియ జరిగితే , నిర్వహణ ఎలా వుంటుందో
చూద్దాం.
సాదారణ పద్దతిలో లేదా డేటా(data) base నిర్వహణ
వ్యవస్థ డేటా బేస్ మెనేజ్మెంట్ సిస్టమ్(data
base management system ) క్లౌడ్ కంప్యూటింగ్(cloud computing)
లో డేటా(data) ఉపయోగం మరియు ఏ విధాయలను
వేర్వేరు ఉపయోగించాలి అనేది నేర్చుకోబోతున్నాం.మన
రోజువారీ జీవితంలో వివిద రకాల storage ని
ఒక service గా ఎలా ఉపయోగిస్తాం మరియు ప్రజాధరణ పొందిన
డేటా(data) storage లలో డ్రాప్ బాక్స్(Dropbox) అనేది
ఒకటి. కనుక, background లో విషయాలను
ఎలా నిర్వహించాలి అనేది తెలుసుకోవాలి,
అంటే డేటా(data) services ని నిర్మించడం వంటివి
కాదు. కనీసం మనం డేటా(data) నమూనా (architecture) అందులోని
సమస్యలను (issues) తెలుసుకోవడాని ప్రయత్నించాలి.
మరొక అంశం ఏమిటంటే, డేటా(data) బధ్రత(security),అంటే
మీ డేటా(data) ఇతర ప్రదేశాలలో ఉందనుకోండి.
మీరు కంప్యూటింగ్ వేరొక డొమైన్(domain)
లో చేస్తున్నారు ఇలాంటప్పుడు భద్రత
కోణాలు ఎలా ఉంటాయి.
అందువల్ల,మౌలిక సదుపాయాల భద్రత , డేటా(data) మరియు
storage భద్రత ముఖ్యమైన అంశాలు.
చాలా మంది ఏం చెబుతారంటే, మనము అప్లికేషన్(application)
ని పునరుత్పత్తి లేదా పునఃస్థాపన
చేసుకోవచ్చు.
కానీ, డేటా(data) ని పునరుత్పత్తి లేదా పునఃస్థాపన
చేయలేము.
ఒక సిస్టమ్(system) లో 10 లేదా 100 పేజీల నివేదిక(report)
తయారుచేస్తున్నప్పుడు సిస్టమ్(system) చెడిపోయింది(crash)
అనుకోండి ,అప్లికేషన్(application) తో పాటుగా డేటా(data)
కూడా నాశనం (loss) అవుతుంది.అప్పుడు మనము OS ఆపరేటింగ్
సిస్టమ్(Operating System)ని , word processing ని తిరిగి
పొందవచ్చు.
కానీ, డేటా(data)ని తిరిగి పొందడం సాధ్యం కాదు,
ఏదైనా పునరుద్ధరణ వ్యవస్థ(Recovery System) వుంటే
తప్ప. నేను ఎప్పుడైనా నా దగ్గర వున్న డెస్క్టాప్
సిస్టమ్(system) కానీ ,laptop కానీ ఉపయోగిస్తుంటే
అందులో డేటా(data) ని backup తీస్కోవాల్సిన
భాధ్యత నాదే ఎలాగంటే ఒకే రకమైన డేటా(data)
కు సంభంధించిన ఎక్కువ కాపీలను పెట్టుకోవడం.
నేను నా సిస్టమ్(system)లో కాకుండా వేరొక చోట
డేటా(data)ని store చెయ్యాలనుకున్నప్పుడు, ఏదైనా loss లేదా ఇంకేదైనా
ప్రమాదం జరిగినప్పుడు డేటా(data) ఎలా బధ్ర
పరచబడుతుంది.
మరొక సమస్య ఏమిటంటే నా డేటా(data) ని ఎవరైనా
తీసుకోవడం లేదా దొంగలించడం జరగవచ్చు.
కనుక, మనకు డేటా(data) భద్రత గురించి ఒక
అవగాహన ఉండాలి.
ఇక్కడ మరొక ముఖ్యమైన అంశం ఐడెంటిటీ(Identity)
మరియు ఎక్సెసింగ్(Accessing) నిర్వహణకి సంబందించిన
విషయం.
ప్రత్యేకించి సహకార పార్టీల మధ్య వీటి
ఆవశ్యకత ఎక్కువగా ఉంటుంది.
ఎక్సెస్(Access) నియంత్రణ (Control), నమ్మకం (trust) మరియు
కీర్తి (reputation) కి సంభందించిన సమస్యలు కూడా ఉన్నాయి.
ఈ ఎక్సెస్(access) నియంత్రణ ఎలా జరుగుతుంది,స్టాండర్డ్
అక్సెస్( standard access) నియంత్రణ పద్దతా లేదా పాత్ర
ఆధారిత(Role Based) పద్ధతా .
ఇప్పుడు సెక్యూరిటి(security)మీద పని చేద్దాం, ఎలాగంటే
,ఒక సర్విస్ ప్రొవైడర్(service provider)ని ఎంత నమ్ముతున్నాం
లేదా నేను సర్విస్ ప్రొవైడర్2 కంటే
సర్విస్ ప్రొవైడర్ 1ని ఎక్కువగా నమ్మలా?
CSPని ఎలా భేరీజు వెయ్యాలి?
రేపుటేషన్(Reputation)కి సంభందించిన అంశాలను
కూడా చూడబోతున్నాం.
డేటా(data), అప్లికేషన్(application) మరియు వినియోగదారులు
loss అయినప్పుడు పడే రిస్క్(risk)కి సంభందించిన
అంశాలను కూడా చూడబోతున్నాం.
వినియోగదారులు అంటే ఎవరికోసం అయితే మనం
క్లౌడ్(cloud) ని కొనుగోలు చేస్తున్నాము .మనము
వీటిని భధ్రపరచవచ్చు .కనుక ఈ ట్రస్ట్(trust),
రెపుటేషన్(reputation) మరియు రిస్క్(risk)ని ఒక త్రిభుజంలో
మూడు భాగాలుగా చెప్పవచ్చు .అంటే ఈ మూడు ఒకధానికి
ఒకటి అంతర్లీన సంభంధం కలిగి వుంటాయి .దీని
వలన పూర్తి వ్యవస్థ పని తీరూ ఎక్కువగా
ప్రభావితం అవుతుంది.వీటి అన్నింటిని క్లౌడ్
కంప్యూటింగ్(cloudcomputing) రూపావలిలో ఏ విధంగా
హామీ యిస్తారు అనేధి చూద్ధాము .
తదుపరి మనము కొన్ని సంధార్భాలను పరిశీలన
చేద్దాం(case study) .కొన్ని వివరణ పూరిత ఓపెన్
సోర్స్(open source) మరియు క్లౌడ్ సిములేటర్(cloud
simulator) గురించి తెలుసుకుందాం.బజారులో చాలా వాణిజ్య పరమయిన
క్లౌడ్(cloud)s అంధుబాటులో ఉన్నాయి .కనుక మనం
వాటి property ని మరియు పనితీరును తెలుసుకోవడానికి
ప్రయత్నిద్ధాము.తరువాత ఓపెన్ సోర్స్ క్లౌడ్(open
source cloud) గురించి తెలుసుకుందాము.సమయం ఉంటే వివిధ రకాల
ఇంస్టాలేషన్(installation) open source cloud లు మరియు సిములేటర్లు(simulators)
ఉన్నాయి అనేధి కూడా చూద్ధాము .ఈ విధ్యా
ప్రపంచంలో మన ముఖ్య ఉద్ధేశం వీటిని భవిష్యత్
లోకి తీసుకెళ్ళడం .మరి మనం భవిష్యత్
లో మరికొంత చూడబోతున్నాం .కాభట్టి ప్రస్తుత
క్లౌడ్ కంప్యూటింగ్(cloudcomputing) ధోరణిని చూడడానికి
ప్రయత్నిద్ధాము . ఎవరితే పరిశీలనలో
ఆసక్తి చూపుతారో వారు pg లేదా ug స్థాయిలో
వారు క్లౌడ్ కంప్యూటింగ్(cloudcomputing) యొక్క విభిన్న అంశాలు
ఏవి అని ఒక ఆసక్తి కలిగి ఉండవచ్చు .fog
కంప్యూటింగ్(computing) మరియు వివిధ టెక్నాలజీ(technology)
గురించి మాట్లాడుకునేవారు ఉండవొచ్చు.
కాభట్టి ఆ విషయాల యోయిక్క వివిధ అంశాలు
ఏమిటి అని చూడాలనుకుంటున్నాము .కాభట్టి ఈ కోర్సు(course)
లో కోర్సు(course) నిర్మాణం ,ప్రాముఖ్యతను భట్టి
సరైన వివరణ అందించడానికి మేము ప్రయత్నిస్తాము
.మరిన్ని వివరాలు మీకు ఆ లెక్చర్స్(lectures)
ధ్వార మీకు అందిస్తాము .
దీనిని బట్టి మనకో సంక్షిప్త సమాచారం
త్వరితగతిన వస్తుంధి.వాస్తవానికి ఈ క్లౌడ్ కంప్యూటింగ్
(cloudcomputing)లో చేసిన వివిధ కంప్యూటింగ్(computing)
ధోరణులు ఏమిటి ?దీనిని బట్టి ఇది ఒక్కరోజులో
వచ్చింది కాదు. ఇంకేదో వుంది .కాబట్టి మేము
చెప్పేది ఏమిటంటే అన్నీ ఆవిష్కరణల
లేదా అభివృద్ధికి ప్రాధమికంగా ఉన్న
అవసరాలతో లేదా సైంటిఫిక్ కమ్యూనిటీ(scientific community)
చెప్పే అవసరాలతో ,లేదా సాధారణ ప్రజల
అవసరాలతో ముందుకు సాగుతున్నాము . అయితే
మనము ఈ విషయాల గురించి ఎక్కువుగా శోధిస్తూ
ఉన్నాం .ఈ కంప్యూటింగ్(computing) అనేది చాలా వరకు
ముందు నుంచే ప్రాచుర్యం లో ఉంది .ఇప్పటికి
ప్రాచుర్యంలో ఉంది. ఇది పూర్తిగా కొత్త
విషయమా లేక సమ్మేళనమా లేక విషయాల పరిణామమా
. వివిధ రకాల లిటరేచర్ల(literatures)లో
లేక క్లౌడ్ కంప్యూటింగ్(cloudcomputing)లో ఏం చూశాం .ఇది ఏమి
కొత్త విషయం కాదు .ఇది ఇప్పటికే ఆచరణలో
ఉంది,మరియు దీని అభివృద్ధి వేరొక
రూపం లో కలిగి ఉంది. మనం వివిధ రకాల కంప్యూటింగ్(computing)
రూపావళిని గమనించినట్లైతే అవి ఎక్కువ కాలం
ఉపయోగించ బడుతున్నాయి.
కనుక మనం వివిధ రకాల కంప్యూటింగ్(computing)
పద్ధతులను చూసినట్లైతే ,మొట్ట మొదటి కంప్యూటింగ్(computing)
,డిస్ట్రిబ్యూటెడ్ కంప్యూటింగ్(distributed
computing).
అన్నీ కంప్యూటింగ్(computing) దీనిని నుండి పుట్టుకొచ్చాయి
.దీనితో పాటు గ్రిడ్(grid) కంప్యూటింగ్(computing)
,క్లస్టర్ కంప్యూటింగ్(clustercomputing),యుటిలిటీ కంప్యూటింగ్(utilitycomputing)
మరియు క్లౌడ్ కంప్యూటింగ్(cloudcomputing) గురుంచి మాట్లాడుకుంటాం.
ఇప్పుడు ఎక్కడైనా వివిధ అవసరాలకు తగిన
అభివృద్ధిని చూసినట్లైతే ,ప్రతి ఒక్కరికి
కొన్ని ప్రయూజనాలు ఉంటాయి మరి కొన్ని
నష్టాలు ఉంటాయి .కొన్ని అంశాలను సులభ పద్ధతిలో
పరిష్కరించడానికి కంప్యూటింగ్(computing)
ఎలా సహాయ పడుతుందో నేర్చుకుందాం .ఎందుకంటే
కొన్ని మనకు తెలిసినవే లిటరేచర్(literature)లో
ఉన్న విధంగా కంప్యూటింగ్(computing) అనేది నిర్వచించబడింది
.
డిస్ట్రిబ్యూటెడ్ కంప్యూటింగ్(distributed
computing) ని చూసినట్లైతే,పూర్వ కాలంలో కెంద్రీకృత
(central)వ్యవస్థ ఉండేది .దీనికి వివిద రకాల
టర్మినల్లు(terminals) ఉన్న మెయిన్ ఫ్రేమ్(mainframes)ని
ఉపయోగించేవారు .ఇక్కడ జాబ్స్ (jobs)main framesకి
అందించి పూర్తి చేసుకొని వాటి ఫలితాలను అమ్ముకుంటారు.
కాబట్టి ,ప్రధానంగా దీనిలో తార్కికంగా
ఒకేప్రాసెసింగ్( processing) ఉంటుంది అందువల్ల
దీనిని యూనిప్రొసెసర్ కంప్యూటింగ్(uniprocessorcomputing)
లేదా సెంట్రల్ కంప్యూటింగ్(centralcomputing) రకంగా చెబుతాము .ఇప్పుడు
వివిధ ప్రదేశాల్లో ఉంది .అంతే కాదు ఇది
ఇప్పటికీ వాడుకలో ఉంది. కాబట్టి దీనిని
మనం వదిలి వేయలేము.దీని అవసరం ఎక్కడో ఒక
చోట ఉండే ఉండొచ్చు .మరొక అభివృద్ధి
చెందిన కంప్యూటింగ్(computing), డిస్ట్రిబ్యూటెడ్
కంప్యూటింగ్(distributedcomputing),ఇది ఒక భౌగోళిక స్థలంలో
పంపిణీ చేసిన వివిధ రకాల సిస్టమ్(system)s.దీనిలో
ఒక ల్యాబ్ సన్నివేశంలో (scenario)మరియు ఒక పెద్ధ
భౌగోళిక సరిహద్ధులు కలిగిన సన్నివేసంలో
వెత్యాసం ఉంటుంది.ఇది అక్కడ ఉన్న వివిధ
రకాల రిసోర్సెస్ (recourses) పై ఆధారపడి ఉంటుంది
.ఇక్కడ మరొక ముఖ్య సమస్య కోలాబొరేటివ్(collaborative)
సిస్టమ్(system)s మధ్య నెట్వర్క కనెక్షన్(network
connection).
*కాబట్టి ఇది computer science రంగంలో పంపిణీ
వ్యవస్థల అధ్యాయానికి ఉపయోగ పడుతుంది .పంపిణీ
వ్యవస్థను ఘనన ప్రక్రియను పరిష్కరించడానికి
ఉపయోగిస్తాం .
ఇంకా ఇతర అర్ధాలు ఉన్నాయి.
మీరు ఇంటర్నెట్లో(INTERNET) శోధించినట్లైతే
అవి తెలుస్తాయి . అక్కడ వివిధ స్వతంత్ర కంప్యుటేషనల్
(computational) సంస్థలకు స్థానిక memory ఉన్నాయని చెబుతుంది
. కాబట్టి , స్వతంత్ర కంప్యూటింగ్(computing)
సంస్థలకు వారి సొంత స్టాటిక్ మెమొరీ(static
memory) కలిగి ఉంటుంది .
ఒక బ్యాక్ బోన్ కమ్యూనికేషన్ నెట్వర్క్(back bone communication
network) పై సందేశం ద్వారా , ఒకదానితో ఒకటి సమాచారాన్నికమ్మ్యూనికేట్
(communicate) చేస్తుంది . కాబట్టి ఓ.ఎస్(os)
యొక్క ప్రాధమిక భావనను చూస్తే ప్రాససెర్(PROCESSOR)
వివిధ సంభాషణల రేఖల ద్వారా ప్రతి ప్రాససెర్(PROCESSOR)
ఉన్న విషయాలను స్థానిక మెమొరీ( memory)కి ఒకదానితో
ఒకటి అధిక వేగం కలిగిన బస్సుల( busses) ద్వారా
చెబుతుంది .
డిస్ట్రిబ్యూటెడ్ కంప్యూటింగ్(distributed
computing)లో మనము వివిధ రకాలైన ఉదాహరణలను
చెప్పుకోవచ్చు.
అందులో ఇంటర్నెట్వర్కింగ్(internetworing) మొదలుకొని ఏ.టి.ఎం(ATM),బ్యాంక్(bank)
యంత్రాలు లేదా వివిధ బ్యాంక్ శాఖలు లేదా
వివిధ సహకారసంస్థలు మరియు వివిధ రకాల
పనులను ఎక్సిక్యూటింగ్(executing) చేయు వరకు ఉన్నాయి.
అలాగే ఇంధులో ఇంట్రానెట్( Intranet) /వర్క్ గ్రూప్స్
(work groups) కూడా ఉన్నాయి.
త్వరలో, కంప్యూటింగ్ వ్యవస్థ సంపూర్ణంగా
సర్వవ్యాప్త నెట్వర్క్ అనుసంధానించబడిన
పరికరాలను కలిగి ఉండవచ్చు,లేదా మనము
ఈ సర్వవ్యాప్త అనుసంధానీచబడిన పరికరాలను ముంధే
కలిగిఉన్నాము.లేదా దీనిని మనము తాత్కాలిక
స్థాపన అని చెప్పవచ్చు .
ఈ రోజులలో మనము గమనించినట్లైతే, తాత్కాలిక నెట్వర్క్స్(networks)
కలిగిన వివిధ రకముల నెట్వర్క్స్(networks)
ఉన్నాయి.అందులో ఉదాహరణకు వెహిక్యులర్ అడ్-హక్(vehicular
adhoc) నెట్వర్క్స్(networks),అనగా స్మార్ట్(smart) వాహనాలు
కలిసివస్తునప్పుడు వాటి యొక్క ఆన్ బోర్డ్
యూనిట్స్(on board units) సమాచార వ్యవస్థ ద్వారా తాత్కాలిక
నెట్వర్క్స్(networks) ని ఏర్పరుస్తాయి
మరియు వివిద రకాలైన భద్రతకు సంబంధించిన
విధులు, వినోదబరితమైనవి లేదా t.v కార్యక్రమాలను
నిర్వహిస్తుంది.
డిస్ట్రిబ్యూటెడ్ సిస్టెంస్(Distributed Systems)లో
విస్తృతమైన కంప్యుటేర్స్(computers)ని చూసినట్లైతే వాటిలో
ప్రథమంగా వర్క్ స్టేషన్స్(workstations), సర్వర్ సిస్టమ్స్(Server
systems) మరియు పర్సనల్ ఆసిస్టన్స్ డివైసెస్(Personal
Assistance devices) ఉన్నాయి.
వర్క్ స్టేషన్(Workstation) అనేది వినియాగదారుని
వద్ద కంప్యూటింగ్(computing) కొరకు ఉపయోగించేవి.సర్వర్
సిస్టమ్స్(Server systems) అనేవి వనరులను మరియు
సేవలను అందించే కంప్యుటేర్స్(computers).
పర్సనల్ ఆసిస్టన్స్ డివైసెస్(Personal Assistance
devices) వైర్ లెస్ (wireless) సమాచార వ్యవస్థ ద్వారా
సిస్టమ్(system) కి అనుసందానించబడిన హ్యాండ్ హెల్డ్(handheld)
కంప్యుటేర్స్(computers) మరియు ఎటువంటి సమాచార
వ్యవస్థలో అయినా ఉపయోగిస్తారు.
కనుక సాధారణంగా పైన పేర్కొనబడినవన్నీడిస్ట్రిబ్యూటెడ్
సిస్టెంస్(Distributed Systems) లో ఉంటాయి.
ఇంకా ఇంకో రకమైన అధిక నెట్వర్క్(network)
సామర్ధ్యము మరియు ప్రొసెసింగ్ నోడ్స్(processing
nodes) ఉంటాయి.
మనమిప్పుడు డిస్ట్రిబ్యూటెడ్ కంప్యూటింగ్(distributed
computing) యొక్క సాదారణ లక్షణాలు,ఉపయోగాలు
చూసినట్లైతే, వీటిలో ఒకటైన ఫాల్ట్ టోలరెన్స్(
fault tolerance) అంటే ఒకటి లేదా కొన్ని సిస్టమ్(system)s
పనిచేస్తున్నప్పుడు, కొన్నినోడ్స్( nodes)
విఫలమైతే కొంచెం తక్కువ పర్ఫార్మన్స్
(performance)తో మొత్తం సిస్టమ్(system) బాగానే పని చేస్తుంది
కానీ సెంట్రలైజేడ్ సిస్టమ్( centralized system)
లాగా మొత్తం సిస్టమ్(system) విఫలమవ్వదు.దీనిని
ఫాల్ట్ టోలరెంట్(fault tolerant)గా చేయడానికి
చాలా విభిన్న పద్దతులు ఉన్నావా.
ప్రతి నోడ్(node) పాక్షిక పాత్ర పోషిస్తుంది:
ప్రతి కంప్యూటర్(computer)కి పూర్తి సిస్టమ్(system)
గురించి పరిమిత,అసంపూర్ణమైన వీక్షణ ఉంటుంధి.ప్రతి
కంప్యూటర్ ఇన్పుట్(computer input) యొక్క ఒక్క భాగము
మాత్రమే తెలిసి ఉంటుంది.
ప్రతి వినియోగదారుడు సిస్టమ్(system) లో ఉన్న
కంప్యూటింగ్(computing) power మరియు స్టోరేజ్(storage)
వనరులని మరియొక వినియోగదారులతో పంచుకోవచ్చు.
ప్రతి నోడ్(node)కి చాలా పనులను కేటాయించడం
ద్వారా మొత్తం సిస్టమ్(system)కి లోడ్ షేరింగ్(load sharing)
చేయడంలో సహాయ పడుతుంది.దీనిలో నోడ్స్(nodes)ని చేర్చేటప్పుడు
కొంచుమ్ సమయము తీసుకుంటుంది.లేకుంటే అసలు సమయము తీసుకోకపోవచ్చు.ప్యార్లల్(Parallel)
కంప్యూటింగ్(computing) అనేది డిస్ట్రిబ్యూటెడ్
కంప్యూటింగ్(distributed computing)లో ఒక భాగం
డిస్ట్రిబ్యూటెడ్ సిస్టమ్స్(Distribute Systems)
యొక్క మరియొక అంశం ఏమిటంటే, అప్లికేషన్(application)
స్వభావము ను బట్టి , వివిధ రకాల పనితీరును
బట్టి అంటే కంప్యూటింగ్(computing) మరియు డేటా(data) తీవ్రతలను
బట్టి ఇది మనకు అవసరం అవుతుంది.
మరికొన్ని సంధార్భాల్లో, మనము ఏ వైఫల్యం లేనటువంటి
దృఢత్వం కలిగిన సిస్టమ్(system) కావాలనుకుంటాము.
చాలా సందర్భాలలో, మన ప్రాథమిక అవసరాలను
తీర్చుకోవాలనే ముఖ్య ఉద్దేశంతో ఈ డిస్ట్రిబ్యూటెడ్
సిస్టమ్స్ (distributed systems)ని రూపొందించారు.
ఇప్పటికీ ఇంతటితో ముగిస్తూ, మన ఈ చర్చను
తదుపరి లెక్చర్స్(lectures) లో కొనసాగిస్తాం.
ధన్యవాదములు.
